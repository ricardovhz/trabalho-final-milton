/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.vanhoz.ricardo.trabalho.milton.tela;

import br.com.vanhoz.ricardo.trabalho.milton.data.BaseDAO;
import br.com.vanhoz.ricardo.trabalho.milton.data.PesosDAO;
import br.com.vanhoz.ricardo.trabalho.milton.main.AnalysisResult;
import br.com.vanhoz.ricardo.trabalho.milton.main.RedeNeuralExecute;
import br.com.vanhoz.ricardo.trabalho.milton.main.SoundAnalyzer;
import br.com.vanhoz.ricardo.trabalho.milton.main.TestTrainNet;
import br.com.vanhoz.ricardo.trabalho.milton.main.Utils;
import br.com.vanhoz.ricardo.trabalho.milton.neural.train.TreinadorRede;
import br.com.vanhoz.ricardo.trabalho.milton.rec.AudioRecorder;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.logging.Level;
import javax.swing.JFileChooser;
import javax.swing.SwingUtilities;
import javax.swing.SwingWorker;
import javax.swing.plaf.FileChooserUI;
import javax.swing.plaf.basic.BasicFileChooserUI;

/**
 *
 * @author ricardo
 */
public class Main extends javax.swing.JFrame {

    private Logger logger;

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
        logger = new Logger(jTextArea1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        lblNomeResultado = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        txtNome = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        lblGravandoNovo = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtCiclos = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel4.setText("Clique em gravar");

        jButton2.setText("Gravar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel5.setText("Ou clique em abrir");

        jButton4.setText("Abrir");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel7.setText("Resultado");

        lblNomeResultado.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jButton2)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(jButton4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addComponent(lblNomeResultado, javax.swing.GroupLayout.DEFAULT_SIZE, 273, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jButton4)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblNomeResultado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(6, 6, 6)))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Detectar", jPanel2);

        jLabel2.setText("Id");

        jLabel3.setText("Nome");

        jButton1.setText("Gravar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel8.setText("Ou suba um arquivo");

        jButton5.setText("...");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(txtId))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(txtNome))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(lblGravandoNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5)
                        .addGap(0, 296, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblGravandoNovo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(jButton5)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Novo", jPanel3);

        jLabel1.setText("Realizar treinamento na rede neural");

        jLabel6.setText("Ciclos");

        txtCiclos.setText("1000");

        jButton3.setText("Treinar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 314, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCiclos))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton3)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtCiclos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Treinamento", jPanel4);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addComponent(jTabbedPane1)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private BaseDAO baseDAO = BaseDAO.getInstance();

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        SwingWorker<Object, Object> worker = new SwingWorker<Object, Object>() {
            
            @Override
            protected Object doInBackground() throws Exception {
                jTextArea1.setText("");
                logger.log("Treinando rede...");
                List<BaseDAO.Registry> reg = baseDAO.getRegistries();
                double[][] entries = new double[reg.size()][35];
                int i = 0;
                for (BaseDAO.Registry r : reg) {
                    double[] ent = new double[35];
                    System.arraycopy(Utils.getBits(r.getFrequency(), 11), 0, ent, 0, 11);
                    System.arraycopy(Utils.getBits(r.getValue(), 17), 0, ent, 11, 17);
                    System.arraycopy(Utils.getBits(r.getPosition(), 3), 0, ent, 28, 3);

                    System.arraycopy(Utils.getBits(r.getId(), 4), 0, ent, 31, 4);

                    entries[i] = ent;
                    i++;
                }

                logger.log("Obtidos " + entries.length + " entradas para treinamento");
                logger.log(Arrays.toString(entries[0]));

                TreinadorRede rede = new TreinadorRede(logger, 3, new double[14][35], 31, 10, 4);
                int ciclos = Integer.parseInt(txtCiclos.getText());
                double[][] result = rede.train(entries, ciclos);

                for (double[] d : result) {
                    logger.log("Resultado: " + Arrays.toString(d));
                }

                logger.log("Salvando os pesos no arquivo...");

                salvarPesos(result);
                
                PesosDAO.getInstance().update();
                
                return null;
            }
            
        };
        
        worker.execute();
    }//GEN-LAST:event_jButton3ActionPerformed

    private String getNomeFromId(int id) {
        File f = new File("id.txt");
        BufferedReader br = null;
        try {
            br = new BufferedReader(new FileReader(f));
            String line = null;
            while ((line = br.readLine()) != null) {
                if (!line.trim().isEmpty()) {
                    String[] fields = line.split(",");
                    int idLine = Integer.parseInt(fields[0]);
                    if (idLine == id) {
                        return fields[1];

                    }
                }
            }
        } catch (FileNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(Level.SEVERE, null, ex);
        } finally {
            if (br != null) {
                try {
                    br.close();

                } catch (IOException ex) {
                    java.util.logging.Logger.getLogger(Main.class
                            .getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        return null;
    }

    private void addId(int id, String nome) throws IOException {
        File f = new File("id.txt");
        if (!f.exists()) {
            f.createNewFile();
        }

        BufferedReader br = new BufferedReader(new FileReader(f));
        String line = null;
        List<String> lid = new ArrayList<>();
        List<String> lnome = new ArrayList<>();
        while ((line = br.readLine()) != null) {
            if (!line.trim().isEmpty()) {
                String[] fields = line.split(",");
                lid.add(fields[0]);
                lnome.add(fields[1]);
            }
        }
        br.close();

        BufferedWriter bw = new BufferedWriter(new FileWriter(f));
        for (int i = 0; i < lid.size(); i++) {
            bw.write(lid.get(i) + "," + lnome.get(i));
            bw.newLine();
        }
        bw.write(id + "," + nome);
        bw.newLine();
        bw.flush();
        bw.close();
    }

    private List<BaseDAO.Registry> capture(int id) throws IOException {
        try {
            AudioRecorder rec = new AudioRecorder();
            rec.captureFromFile("hi.wav");
            rec.captureFromFile("hi.wav");
            rec.captureFromFile("hi.wav");
            rec.captureFromFile("hi.wav");
            rec.captureFromFile("hi.wav");
            rec.captureFromFile("hi.wav");
            rec.captureFromFile("hi.wav");
            rec.captureFromFile("hi.wav");
            rec.captureFromFile("hi.wav");

            logger.log("Gravando (pode começar a falar...)");
            ArrayList<BaseDAO.Registry> registries = new ArrayList<BaseDAO.Registry>();

            for (int j = 0; j < 5; j++) {
                System.out.println("Tentativa " + j);
//				rec.capture(2000);
//				rec.saveDataToWAV("/tmp/ad.wav");

                byte[] audio = rec.getCapturedAudio();
                SoundAnalyzer sa = new SoundAnalyzer(audio);
                List<AnalysisResult> result = sa.getFirstBiggestResults(5);

                int i = 0;
                for (AnalysisResult ar : result) {
                    System.out.println(ar);
                    if (j == 0) {
                        registries.add(new BaseDAO.Registry(ar.getFrequency(), ar.getValue(), i, id));
                    } else {
                        BaseDAO.Registry rg = registries.get(i);
                        rg.setFrequency(rg.getFrequency() + ar.getFrequency());
                        rg.setValue(rg.getValue() + ar.getValue());
                    }
                    i++;
                }
            }

            for (BaseDAO.Registry ar : registries) {
                ar.setFrequency(ar.getFrequency() / registries.size());
                ar.setValue(ar.getValue() / registries.size());
            }
            return registries;
        } finally {

        }
    }

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        BaseDAO.getInstance().update();
        PesosDAO.getInstance().update();
        lblNomeResultado.setText("");
        jTextArea1.setText("");
        RedeNeuralExecute exec = new RedeNeuralExecute(logger);

        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    int id = exec.getIdFromMicrofone();
                    String nome = getNomeFromId(id);
                    if (nome != null) {
                        lblNomeResultado.setText(nome);
                    } else {
                        lblNomeResultado.setText("Não reconhecido");

                    }
                } catch (IOException ex) {
                    java.util.logging.Logger.getLogger(Main.class
                            .getName()).log(Level.SEVERE, null, ex);
                }
            }
        });

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        BaseDAO.getInstance().update();
        PesosDAO.getInstance().update();
        lblNomeResultado.setText("");
        jTextArea1.setText("");
        RedeNeuralExecute rede = new RedeNeuralExecute(logger);
        SwingUtilities.invokeLater(new Runnable() {

            @Override
            public void run() {
                JFileChooser jfc = new JFileChooser("/home/ricardo/projetos/trabalho-final-milton/");
                int status = jfc.showOpenDialog(null);
                if (status == JFileChooser.APPROVE_OPTION) {
                    File f = jfc.getSelectedFile();
                    try {
                        int id = rede.getIdFromCaptureFile(f.getAbsolutePath());
                        String nome = getNomeFromId(id);
                        if (nome != null) {
                            lblNomeResultado.setText(nome);
                        } else {
                            lblNomeResultado.setText("Não reconhecido");

                        }

                    } catch (IOException ex) {
                        java.util.logging.Logger.getLogger(Main.class
                                .getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        });
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        SwingUtilities.invokeLater(new Runnable() {

            @Override
            public void run() {
                lblGravandoNovo.setText("Gravando");
                jTextArea1.setText("");
                int id = Integer.parseInt(txtId.getText());
                String nome = txtNome.getText();

                AudioRecorder ar = new AudioRecorder();
                ar.capture(2000);
                byte[] data = ar.getCapturedAudio();

                ArrayList<BaseDAO.Registry> registries = new ArrayList<BaseDAO.Registry>();

                try {
                    registries.addAll(capture(id));

                    logger.log("Gravando dados de [" + nome + "] no arquivo...");
                    BaseDAO inst = BaseDAO.getInstance();
                    for (BaseDAO.Registry r : registries) {
                        inst.addRegistry(r.getFrequency(), r.getValue(), r.getPosition(), r.getId());
                    }
                    addId(id, nome);

                } catch (IOException ex) {
                    java.util.logging.Logger.getLogger(Main.class
                            .getName()).log(Level.SEVERE, null, ex);
                }
                lblGravandoNovo.setText("");
                logger.log("Feito!");
            }
        });
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        SwingUtilities.invokeLater(new Runnable() {

            @Override
            public void run() {
                jTextArea1.setText("");
                JFileChooser jfc = new JFileChooser();
                int status = jfc.showOpenDialog(null);
                if (status == JFileChooser.APPROVE_OPTION) {
                    File f = jfc.getSelectedFile();

                    int id = Integer.parseInt(txtId.getText());
                    String nome = txtNome.getText();

                    AudioRecorder ar = new AudioRecorder();
                    try {
                        ar.captureFromFile(f.getAbsolutePath());

                    } catch (IOException ex) {
                        java.util.logging.Logger.getLogger(Main.class
                                .getName()).log(Level.SEVERE, null, ex);
                    }
                    byte[] data = ar.getCapturedAudio();

                    ArrayList<BaseDAO.Registry> registries = new ArrayList<BaseDAO.Registry>();

                    try {
                        registries.addAll(capture(id));

                        logger.log("Gravando dados de [" + nome + "] no arquivo...");
                        BaseDAO inst = BaseDAO.getInstance();
                        for (BaseDAO.Registry r : registries) {
                            inst.addRegistry(r.getFrequency(), r.getValue(), r.getPosition(), r.getId());
                        }
                        addId(id, nome);

                    } catch (IOException ex) {
                        java.util.logging.Logger.getLogger(Main.class
                                .getName()).log(Level.SEVERE, null, ex);
                    }
                    lblGravandoNovo.setText("");
                    logger.log("Feito!");

                }
            }
        });

    }//GEN-LAST:event_jButton5ActionPerformed

    private void salvarPesos(double[][] result) {
        PesosDAO.getInstance().salvar(result);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel lblGravandoNovo;
    private javax.swing.JLabel lblNomeResultado;
    private javax.swing.JTextField txtCiclos;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtNome;
    // End of variables declaration//GEN-END:variables
}
